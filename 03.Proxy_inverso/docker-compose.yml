services:
  frontend:
    build:
      context: ./frontend
      dockerfile: DockerfileFrontendAMG
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - redAMG

  backend:
    build:
      context: ./backend
      dockerfile: DockerfileBackendAMG
    volumes:
      - ./backend:/var/www/html
    env_file:
      - .env
    networks:
      - redAMG

  web:
    build:
        context: ./web
        dockerfile: DockerfileWebAMG
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - ./web/certs:/etc/nginx/certs
    depends_on:
        - frontend
        - backend
    networks:
        - redAMG

  db:
    image: mysql:5.7
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/mysql
    env_file:
      - .env
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=no
    networks:
      - redAMG

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    env_file:
      - .env
    environment:
      PMA_HOST: db
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - db
    networks:
      - redAMG

networks:
  redAMG:
    driver: bridge

volumes:
  db_data: